name: Maven Release
permissions:
  contents: write
  packages: write


on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
      developmentVersion:
        description: 'Next development version'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Generate Changelog
        run: mvn git-changelog-maven-plugin:git-changelog
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Commit Changelog
        run: |
          git add CHANGELOG.md
          git commit -m "docs: update changelog for version ${{ github.event.inputs.releaseVersion }}"
          git push origin main
      - name: Settup Maven setting.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
           [{
            "id": "github",
            "username": "${{ github.actor }}",
            "password": "${{ secrets.RELEASE_TOKEN }}"
        }]
      - name: Prepare Release
        run: |
          set -e
          mvn release:prepare \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          -DtagNameFormat=v@{project.version}
      - name: Perform Release
        run: mvn release:perform
      - name: Push changes
        run: |
          set -e
          git push origin main
          git push origin --tags
      - name: Get changelog entry
        id: changelog
        run: |
          CHANGELOG_ENTRY=$(sed -n "/## ${GITHUB_REF#refs/tags/}/,/## /p" CHANGELOG.md | sed '$d')
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_ENTRY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
         tag_name: v${{ github.event.inputs.releaseVersion }}
         name: Release v${{ github.event.inputs.releaseVersion }}
         body: ${{ steps.changelog.outputs.changelog }}
         files: |
           target/*.jar
           target/*.pom
         draft: true
         prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}